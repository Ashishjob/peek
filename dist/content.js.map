{"version":3,"file":"content.js","mappings":"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","sources":["webpack://peek-semantic-search/./src/content.js"],"sourcesContent":["// Keep track of current page content and vectors\r\nlet pageContent = {\r\n  chunks: [],\r\n  vectors: []\r\n};\r\n\r\n// Keep track of highlighted results\r\nlet highlightedElements = [];\r\nlet currentResultIndex = -1;\r\n\r\n// Listen for messages from the popup\r\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\r\n  console.log('Content script received message:', request);\r\n  \r\n  switch(request.action) {\r\n    case 'performSearch':\r\n      handleSearch(request.query, request.threshold, sendResponse);\r\n      return true; // Keep the message channel open for the async response\r\n      \r\n    case 'scrollToResult':\r\n      scrollToResult(request.index);\r\n      break;\r\n      \r\n    case 'clearHighlights':\r\n      clearHighlights();\r\n      break;\r\n  }\r\n});\r\n\r\n// Function to extract text content from the page\r\nfunction extractPageContent() {\r\n  // Get body text content, excluding scripts, styles, etc.\r\n  const body = document.body;\r\n  const chunks = [];\r\n  \r\n  // Function to recursively extract text from DOM nodes\r\n  function extractTextFromNode(node, depth = 0) {\r\n    // Skip script, style, and other non-content elements\r\n    if (node.tagName === 'SCRIPT' || node.tagName === 'STYLE' || \r\n        node.tagName === 'NOSCRIPT' || node.tagName === 'IFRAME') {\r\n      return;\r\n    }\r\n    \r\n    // If this is a text node with content\r\n    if (node.nodeType === Node.TEXT_NODE && node.textContent.trim().length > 0) {\r\n      const parentElement = node.parentElement;\r\n      chunks.push({\r\n        text: node.textContent.trim(),\r\n        node: parentElement || node,\r\n        index: chunks.length\r\n      });\r\n      return;\r\n    }\r\n    \r\n    // If this is an element node with children\r\n    if (node.nodeType === Node.ELEMENT_NODE) {\r\n      // For block-level elements or elements with significant content, consider them as chunks\r\n      const isBlockOrSignificant = \r\n        getComputedStyle(node).display === 'block' || \r\n        ['P', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'LI'].includes(node.tagName);\r\n      \r\n      if (isBlockOrSignificant && node.textContent.trim().length > 0) {\r\n        // Only add as a chunk if it has immediate text children\r\n        // (and not just text from deeply nested elements)\r\n        let hasDirectTextContent = false;\r\n        for (let i = 0; i < node.childNodes.length; i++) {\r\n          if (node.childNodes[i].nodeType === Node.TEXT_NODE && \r\n              node.childNodes[i].textContent.trim().length > 0) {\r\n            hasDirectTextContent = true;\r\n            break;\r\n          }\r\n        }\r\n        \r\n        if (hasDirectTextContent) {\r\n          chunks.push({\r\n            text: node.textContent.trim(),\r\n            node: node,\r\n            index: chunks.length\r\n          });\r\n          return;\r\n        }\r\n      }\r\n      \r\n      // Recursively process child nodes\r\n      for (let i = 0; i < node.childNodes.length; i++) {\r\n        extractTextFromNode(node.childNodes[i], depth + 1);\r\n      }\r\n    }\r\n  }\r\n  \r\n  extractTextFromNode(body);\r\n  return chunks;\r\n}\r\n\r\n// Function to handle search request\r\nasync function handleSearch(query, threshold, sendResponse) {\r\n  try {\r\n    clearHighlights();\r\n    \r\n    // Extract page content if not already done\r\n    if (pageContent.chunks.length === 0) {\r\n      pageContent.chunks = extractPageContent();\r\n      console.log(`Extracted ${pageContent.chunks.length} text chunks from page`);\r\n    }\r\n    \r\n    // For now, we'll use a simple keyword-based approach as a placeholder\r\n    // In the full implementation, this would use the embedded vectors\r\n    const results = performKeywordSearch(query, pageContent.chunks, threshold);\r\n    \r\n    // Highlight the results on the page\r\n    highlightResults(results);\r\n    \r\n    // Send results back to popup\r\n    sendResponse({ results: results });\r\n    \r\n  } catch (error) {\r\n    console.error('Error performing search:', error);\r\n    sendResponse({ error: error.message });\r\n  }\r\n}\r\n\r\n// Temporary function to perform keyword search\r\n// This will be replaced with semantic search once we integrate embeddings\r\nfunction performKeywordSearch(query, chunks, threshold) {\r\n  const results = [];\r\n  const queryLower = query.toLowerCase();\r\n  \r\n  chunks.forEach(chunk => {\r\n    const textLower = chunk.text.toLowerCase();\r\n    if (textLower.includes(queryLower)) {\r\n      // Calculate a simple \"similarity\" based on number of occurrences\r\n      // This is a placeholder for the actual vector similarity\r\n      const occurrences = (textLower.match(new RegExp(queryLower, 'g')) || []).length;\r\n      const similarity = Math.min(0.5 + (occurrences * 0.1), 0.95);\r\n      \r\n      if (similarity >= threshold) {\r\n        results.push({\r\n          index: chunk.index,\r\n          text: chunk.text,\r\n          similarity: similarity\r\n        });\r\n      }\r\n    }\r\n  });\r\n  \r\n  return results.sort((a, b) => b.similarity - a.similarity);\r\n}\r\n\r\n// Function to highlight search results on the page\r\nfunction highlightResults(results) {\r\n  if (!results || results.length === 0) return;\r\n  \r\n  results.forEach(result => {\r\n    const chunk = pageContent.chunks[result.index];\r\n    if (!chunk || !chunk.node) return;\r\n    \r\n    // Create a highlight element to wrap the content\r\n    const originalContent = chunk.node.innerHTML;\r\n    const highlightColor = getHighlightColor(result.similarity);\r\n    \r\n    // Apply the highlight style\r\n    chunk.node.style.backgroundColor = highlightColor;\r\n    chunk.node.style.transition = 'background-color 0.3s';\r\n    \r\n    // Keep track of highlighted elements for later removal\r\n    highlightedElements.push({\r\n      element: chunk.node,\r\n      originalContent: originalContent\r\n    });\r\n  });\r\n  \r\n  // Scroll to the first result\r\n  if (results.length > 0) {\r\n    scrollToResult(0);\r\n  }\r\n}\r\n\r\n// Function to scroll to a specific result\r\nfunction scrollToResult(index) {\r\n  if (index < 0 || index >= pageContent.chunks.length) return;\r\n  \r\n  const chunk = pageContent.chunks[index];\r\n  if (!chunk || !chunk.node) return;\r\n  \r\n  // Remove highlight from previous result if any\r\n  if (currentResultIndex >= 0 && currentResultIndex < highlightedElements.length) {\r\n    const prevElement = highlightedElements[currentResultIndex].element;\r\n    if (prevElement) {\r\n      prevElement.style.outline = 'none';\r\n    }\r\n  }\r\n  \r\n  // Add highlight to current result\r\n  chunk.node.style.outline = '2px solid #4285f4';\r\n  chunk.node.style.outlineOffset = '-2px';\r\n  \r\n  // Scroll the element into view\r\n  chunk.node.scrollIntoView({\r\n    behavior: 'smooth',\r\n    block: 'center'\r\n  });\r\n  \r\n  currentResultIndex = index;\r\n}\r\n\r\n// Function to clear all highlights\r\nfunction clearHighlights() {\r\n  highlightedElements.forEach(highlight => {\r\n    highlight.element.style.backgroundColor = '';\r\n    highlight.element.style.outline = '';\r\n  });\r\n  \r\n  highlightedElements = [];\r\n  currentResultIndex = -1;\r\n}\r\n\r\n// Utility function to get highlight color based on similarity score\r\nfunction getHighlightColor(similarity) {\r\n  // Convert similarity (0.0-1.0) to a yellow-to-green gradient\r\n  const r = Math.floor(255 - (similarity * 100));\r\n  const g = 255;\r\n  const b = 0;\r\n  return `rgba(${r}, ${g}, ${b}, 0.3)`;\r\n}\r\n\r\n// Initialize when the content script loads\r\nconsole.log('peek Semantic Search content script initialized');\r\n"],"names":["_regeneratorRuntime","r","t","e","Object","prototype","n","hasOwnProperty","o","Symbol","i","iterator","a","asyncIterator","u","toStringTag","c","defineProperty","value","enumerable","configurable","writable","h","Generator","create","Error","done","method","arg","delegate","d","f","sent","_sent","dispatchException","abrupt","s","type","Context","call","wrap","GeneratorFunction","GeneratorFunctionPrototype","l","p","getPrototypeOf","y","x","v","g","forEach","_invoke","AsyncIterator","_typeof","resolve","__await","then","TypeError","next","w","tryEntries","push","m","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","unshift","pop","values","prev","charAt","slice","stop","rval","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","pageContent","chunks","vectors","highlightedElements","currentResultIndex","chrome","runtime","onMessage","addListener","request","sender","sendResponse","console","log","action","handleSearch","query","threshold","scrollToResult","index","clearHighlights","extractPageContent","body","document","extractTextFromNode","node","depth","undefined","tagName","nodeType","Node","TEXT_NODE","textContent","trim","parentElement","text","ELEMENT_NODE","isBlockOrSignificant","getComputedStyle","display","includes","hasDirectTextContent","childNodes","_x","_x2","_x3","_handleSearch","_callee","results","_callee$","_context","concat","performKeywordSearch","highlightResults","error","message","queryLower","toLowerCase","chunk","textLower","occurrences","match","RegExp","similarity","Math","min","sort","b","result","originalContent","innerHTML","highlightColor","getHighlightColor","style","backgroundColor","transition","element","prevElement","outline","outlineOffset","scrollIntoView","behavior","block","highlight","floor"],"sourceRoot":""}