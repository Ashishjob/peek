{"version":3,"file":"background.js","mappings":"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","sources":["webpack://peek-semantic-search/./src/background.js"],"sourcesContent":["// Background service worker for peek Semantic Search extension\r\n\r\n// Listen for keyboard shortcuts\r\nchrome.commands.onCommand.addListener((command) => {\r\n  if (command === \"open_semantic_search\") {\r\n    console.log(\"Semantic search command triggered.\");\r\n    // You can send a message to the content script here instead\r\n    chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\r\n      chrome.tabs.sendMessage(tabs[0].id, {\r\n        action: \"triggerSemanticSearch\"\r\n      });\r\n    });\r\n  }\r\n});\r\n\r\n// Handle messages from popup or content script\r\nchrome.runtime.onMessage.addListener(function(request, sender, sendResponse) {\r\n  console.log('Background received message:', request.action);\r\n  \r\n  switch(request.action) {\r\n    case 'checkTier':\r\n      // Check user's subscription tier\r\n      checkUserTier(sendResponse);\r\n      return true; // Keep the message channel open for the async response\r\n      \r\n    case 'updateSettings':\r\n      // Update user settings\r\n      updateSettings(request.settings, sendResponse);\r\n      return false; // No async response needed\r\n      \r\n    case 'getSettings':\r\n      // Retrieve user settings\r\n      getSettings(sendResponse);\r\n      return true; // Keep the message channel open for the async response\r\n  }\r\n});\r\n\r\n// Function to check user's tier (free vs premium)\r\nfunction checkUserTier(sendResponse) {\r\n  // For now, we'll just return the stored tier value\r\n  // In a real implementation, this would verify with a backend service\r\n  chrome.storage.local.get(['tierStatus'], function(data) {\r\n    sendResponse({ tier: data.tierStatus || 'free' });\r\n  });\r\n}\r\n\r\n// Function to update user settings\r\nfunction updateSettings(settings, sendResponse) {\r\n  chrome.storage.local.set(settings, function() {\r\n    console.log('Settings updated:', settings);\r\n    if (sendResponse) {\r\n      sendResponse({ success: true });\r\n    }\r\n  });\r\n}\r\n\r\n// Function to retrieve user settings\r\nfunction getSettings(sendResponse) {\r\n  chrome.storage.local.get(null, function(data) {\r\n    sendResponse(data);\r\n  });\r\n}\r\n\r\nchrome.runtime.onInstalled.addListener(function() {\r\n  console.log('peek Semantic Search extension installed');\r\n\r\n  // Set default extension settings\r\n  chrome.storage.local.set({\r\n    tierStatus: 'free',\r\n    searchThreshold: 0.7,\r\n    highlightColor: '#FFFF00',\r\n    isEnabled: true,\r\n    searchHistory: []\r\n  }, function() {\r\n    console.log('Default settings initialized');\r\n  });\r\n\r\n  // Create context menu\r\n  chrome.contextMenus.create({\r\n    id: 'searchSelection',\r\n    title: 'Search with peek',\r\n    contexts: ['selection']\r\n  });\r\n});\r\n\r\n\r\n// Handle context menu clicks\r\nchrome.contextMenus.onClicked.addListener(function(info, tab) {\r\n  if (info.menuItemId === 'searchSelection') {\r\n    // Get the selected text\r\n    const selectedText = info.selectionText;\r\n    \r\n    // Send message to content script to perform search\r\n    chrome.tabs.sendMessage(tab.id, {\r\n      action: 'performSearch',\r\n      query: selectedText,\r\n      threshold: 0.7 // Default threshold\r\n    });\r\n  }\r\n});\r\n"],"names":["chrome","commands","onCommand","addListener","command","console","log","tabs","query","active","currentWindow","sendMessage","id","action","runtime","onMessage","request","sender","sendResponse","checkUserTier","updateSettings","settings","getSettings","storage","local","get","data","tier","tierStatus","set","success","onInstalled","searchThreshold","highlightColor","isEnabled","searchHistory","contextMenus","create","title","contexts","onClicked","info","tab","menuItemId","selectedText","selectionText","threshold"],"sourceRoot":""}